[{"title":"First Blog Post","type":0,"sectionRef":"#","url":"blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"blog/long-blog-post","content":"This is the summary of a very long blog post, Use a <!-- truncate --> comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. <button onClick={() => alert('button clicked!')}>Click me!</button> コピー Click me!","keywords":""},{"title":"Welcome","type":0,"sectionRef":"#","url":"blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":""},{"title":"HPE Ezmeral の商品体系","type":0,"sectionRef":"#","url":"k8s/Ezmeral/sec_Overview/Portfolio_220914_oo01/Portfolio_220914_oo01","content":"","keywords":""},{"title":"HPE GreenLake","type":1,"pageTitle":"HPE Ezmeral の商品体系","url":"k8s/Ezmeral/sec_Overview/Portfolio_220914_oo01/Portfolio_220914_oo01#hpe-greenlake","content":"HPE GreenLake for containersHPE GreenLake for ML Ops "},{"title":"HPE Ezmeral Runtime Enterprise","type":1,"pageTitle":"HPE Ezmeral の商品体系","url":"k8s/Ezmeral/sec_Overview/Portfolio_220914_oo01/Portfolio_220914_oo01#hpe-ezmeral-runtime-enterprise","content":"MapR を使わないと動かない商品 ハイブリッドクラウドにしたければこちらにしなければならない、という売り方らしい。 HPE Ezmeral Runtime Enterprise HPE Ezmeral Runtime Enterprise essentials <= mapR がなくても動く商品HPE Ezmeral Runtime Enterprise HPE Ezmeral ML OpsHPE Ezmeral Data fabricHPE Ezmeral Unified Analytics "},{"title":"Pods","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/Pod_230407_oo01/Pod_230407_oo01","content":"","keywords":""},{"title":"Pods","type":1,"pageTitle":"Pods","url":"k8s/MasteringKubernetes3rd/Chap1/Pod_230407_oo01/Pod_230407_oo01#pods","content":"A pod is the unit of work in Kubernetes. Each pod contains one or more containers. All the containers in a pod have the same IP address and port space.In addition, all the containers in a pod can have access to shared local storage on the node hosting the pod. Containers don't get access to local storage or any other storage by default. Volumes of storage must be mounted into each container inside the pod explicitly.  "},{"title":"Docker container","type":1,"pageTitle":"Pods","url":"k8s/MasteringKubernetes3rd/Chap1/Pod_230407_oo01/Pod_230407_oo01#docker-container","content":"It is possible to run multiple applications inside a single Docker container by having something like supervisord as the main Docker process that runs multiple processes, but this practice is often frowned upon for the following reasons: transparency Infrastructure 側から見て、(単一機能単一コンテナにすれば)どういう機能の container であるかわかり安くなる => 管理しやすくなる。 decoupling software dependenciesease of useefficiency "},{"title":"Replication controller and replica set","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/Replication_230407_oo01/Replication_230407_oo01","content":"Replication controller and replica set","keywords":""},{"title":"Clusters","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/Concepts_230407_oo01/Concepts_230407_oo01","content":"","keywords":""},{"title":"全体図","type":1,"pageTitle":"Clusters","url":"k8s/MasteringKubernetes3rd/Chap1/Concepts_230407_oo01/Concepts_230407_oo01#全体図","content":" 図を見ると、Node は Interntet => Firewall => Node 内の Proxy と通信できると書いてある。Master の方は kubectl コマンドが通信できると書いてある。 第 4 版では以下の図に変わっている。  "},{"title":"用語の定義 : クラスター","type":1,"pageTitle":"Clusters","url":"k8s/MasteringKubernetes3rd/Chap1/Concepts_230407_oo01/Concepts_230407_oo01#用語の定義--クラスター","content":"Clusters A cluster is a collection of hosts (nodes). つまり host = node と言っている。 Nodes A node is a single host. It may be a physical or virtual machine. つまり node = 物理計算機（または VM) = host と言っている。 Each Kubernetes node runs several Kubernetes components, such as the kubelet, the container runtime, and kube-proxy. （大抵の）node の上では kubelet, container runtime, kube-proxy が動いていて、 （次の control plane の説明を読むと）とある node の上では control plane に属するソフトウェアが動いている、と解される。 Control plane Usually, all the control plane components are set up on the same host although its not required. こう書いてあるということは、Control plane は(node と対比されるようなものではなく)ソフトウェアである、と言っている。 The control plane of Kubernetes consists of several components: an API server, a scheduler, a controller manager and optionally a cloud controller manager.  第 3 版では The master is the control plane of Kubernetes.となっているが第 4 版では master という言葉が削除されている。 master と言ってしまうと master node つまり node の一種と解されてしまいがちだからだろう。そう取ってしまうと上記定義の辻褄が合わなくなってくる。 "},{"title":"Labels","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/Labels_230407_oo01/Labels_230407_oo01","content":"","keywords":""},{"title":"Labels","type":1,"pageTitle":"Labels","url":"k8s/MasteringKubernetes3rd/Chap1/Labels_230407_oo01/Labels_230407_oo01#labels","content":"Pod のグループなどを定義するために用いられる名前のこと。 Labels are key-value pairs that are used to group together sets of objects – very often pods. This is important for several other concepts, such as replication controllers, replica sets, deployments, and services that operate on dynamic groups of objects and need to identify the members of the group. Each object may have multiple labels, and each label may be applied to different objects. "},{"title":"Label selectors","type":1,"pageTitle":"Labels","url":"k8s/MasteringKubernetes3rd/Chap1/Labels_230407_oo01/Labels_230407_oo01#label-selectors","content":"Label は Pod の全集合から特定の Pod からなる集合を選び出すために用いられる。 選び出す操作は label selector を用いて行う。 label selector には equality based と set based の２種類がある。（他にもあるのかもしれない） "},{"title":"equality based selector","type":1,"pageTitle":"Labels","url":"k8s/MasteringKubernetes3rd/Chap1/Labels_230407_oo01/Labels_230407_oo01#equality-based-selector","content":"例は以下の通り。 role = webserver, application != foo コピー "},{"title":"set-based selector","type":1,"pageTitle":"Labels","url":"k8s/MasteringKubernetes3rd/Chap1/Labels_230407_oo01/Labels_230407_oo01#set-based-selector","content":"例は以下の通り。 role in (webserver, backend) コピー "},{"title":"Annotations","type":1,"pageTitle":"Labels","url":"k8s/MasteringKubernetes3rd/Chap1/Labels_230407_oo01/Labels_230407_oo01#annotations","content":"ユーザーは、識別用途でない任意のメタデータをオブジェクトに割り当てるためにアノテーションを使用できます。ツールやライブラリなどのクライアントは、このメタデータを取得できます。 (Kubernetes 公式ドキュメント https://kubernetes.io/ja/docs/concepts/overview/working-with-objects/annotations/ より) 公式ドキュメントにある例は以下の通り。annotation = 付随情報 apiVersion: v1kind: Podmetadata: name: annotations-demo annotations: imageregistry: \"https://hub.docker.com/\"spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80 コピー "},{"title":"Creating k8s Clusters Overview","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap2/Creating_230407_oo01/Creating_230407_oo01","content":"","keywords":""},{"title":"本章の内容","type":1,"pageTitle":"Creating k8s Clusters Overview","url":"k8s/MasteringKubernetes3rd/Chap2/Creating_230407_oo01/Creating_230407_oo01#本章の内容","content":""},{"title":"第 3 版での記述","type":1,"pageTitle":"Creating k8s Clusters Overview","url":"k8s/MasteringKubernetes3rd/Chap2/Creating_230407_oo01/Creating_230407_oo01#第-3-版での記述","content":"The topics we will cover are as follows: Creating a single-node cluster with MinikubeCreating a multi-node cluster with KinDCreating a multi-node cluster using k3dCreating clusters in the cloudCreating bare-metal clusters from scratchReviewing other options for creating Kubernetes clusters "},{"title":"第 4 版での記述","type":1,"pageTitle":"Creating k8s Clusters Overview","url":"k8s/MasteringKubernetes3rd/Chap2/Creating_230407_oo01/Creating_230407_oo01#第-4-版での記述","content":"The topics we will cover are as follows: Getting ready for your first clusterCreating a single-node cluster with MinikubeCreating a multi-node cluster with KindCreating a multi-node cluster using k3dCreating clusters in the cloudCreating bare-metal clusters from scratchReviewing other options for creating Kubernetes clusters "},{"title":"Service","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/Service_230407_oo01/Service_230407_oo01","content":"Service","keywords":""},{"title":"Kubernetes 関連情報","type":0,"sectionRef":"#","url":"k8s/Overview/k8sInfo_230112_oo01/k8sInfo_230112_oo01","content":"","keywords":""},{"title":"商用ディストリビューション","type":1,"pageTitle":"Kubernetes 関連情報","url":"k8s/Overview/k8sInfo_230112_oo01/k8sInfo_230112_oo01#商用ディストリビューション","content":"商用ディストリビューションのリスト https://learn.microsoft.com/ja-jp/azure/azure-arc/kubernetes/validation-program "},{"title":"Volume","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/Volume_230407_oo01/Volume_230407_oo01","content":"Volume Local storage used by the pod is ephemeral and goes away with the pod in most cases. Pod は \"local storage\" を container に提供する機能があるが、\"local storage\"は Pod がなくなるとなくなってしまう。 The essence of a volume is a directory with some data that is mounted into a container. Volume は container がマウントできる永続的なストレージ領域のこと。（マウントするのは pod ではなく container.) Volume にはいろいろなタイプがあるが、Container Storage Interface (CSI)という方法がおすすめ。他の方法は fade-out。","keywords":""},{"title":"What is Kubernetes?","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Chap1/WhatIs_230407_oo01/WhatIs_230407_oo01","content":"","keywords":""},{"title":"What Kubernetes is","type":1,"pageTitle":"What is Kubernetes?","url":"k8s/MasteringKubernetes3rd/Chap1/WhatIs_230407_oo01/WhatIs_230407_oo01#what-kubernetes-is","content":"Kubernetes is a platform that encompasses a huge number of services and capabilities that keeps growing. The core functionality is scheduling workloads in containers across your infrastructure, but it doesn't stop there. Here are some of the other capabilities Kubernetes brings to the table: Mounting storage systemsDistributing secretsChecking application health and readinessReplicating application instancesUsing the Horizontal Pod AutoscalerUsing Cluster AutoscalingNaming and service discoveryBalancing loadsRolling updatesMonitoring resourcesAccessing and ingesting logsDebugging applicationsProviding authentication and authorization "},{"title":"Cattle versus pets","type":1,"pageTitle":"What is Kubernetes?","url":"k8s/MasteringKubernetes3rd/Chap1/WhatIs_230407_oo01/WhatIs_230407_oo01#cattle-versus-pets","content":"In the olden days ... Developers and users knew exactly what software was running on each machine. （物理）サーバにギリシャ神話の登場人物の名前をつけたりしていた。サーバをペットのように扱った。When a server died it was a major crisis. Obviously, that approach doesn't scale. When you have tens or hundreds of servers, you must start treating them like cattle. Kubernetes takes the cattle approach to the extreme and takes full responsibility for allocating containers to specific machines. "},{"title":"Kubernetes を使ってやりたいこと","type":0,"sectionRef":"#","url":"k8s/MasteringKubernetes3rd/Motivation_230407_oo01/Motivation_230407_oo01","content":"","keywords":""},{"title":"1. Web アプリケーション、データベースの公開","type":1,"pageTitle":"Kubernetes を使ってやりたいこと","url":"k8s/MasteringKubernetes3rd/Motivation_230407_oo01/Motivation_230407_oo01#1-web-アプリケーションデータベースの公開","content":"DDBJ が公開している多数の Web アプリケーション、データベースを公開したい。 （開発効率向上のため仮想基盤を使いたい。） 計算ノードが壊れたときに自動的に別のノード上でサービスを継続できるようにしたい。autoscale までは今の所考えていない。 "},{"title":"開発と計算基盤管理の分離","type":1,"pageTitle":"Kubernetes を使ってやりたいこと","url":"k8s/MasteringKubernetes3rd/Motivation_230407_oo01/Motivation_230407_oo01#開発と計算基盤管理の分離","content":"古の UNIX 管理手法では、ミドルウェアのインストールにルート権限が必要であることから、 ミドルウェアの管理までが計算基盤側の仕事であったが、今日ではこのモデルは破綻している。 仮想基盤技術の登場により、開発者側で仮想ネットワークからアプリケーションまでを管理できるようになった。 今日の開発プロセスではこうなっていないと効率が悪い。  （小言） クラスタ計算機を構成するノードが時々壊れるのは当たり前。 壊れてもサービスが止まらないようにするのはソフトウェア側の責任k8s が無くても他にも色んな方法がある。k8s がいつも最適なわけでもない。 ついでにいうと、スパコンはそのへんのソフトを置いておくと自動的によしなに速くしてくれる機械ではない。 上手に使えば速くなるもの。 "},{"title":"2. ビッグデータ系のミドルウェアの利用（バッチ処理）","type":1,"pageTitle":"Kubernetes を使ってやりたいこと","url":"k8s/MasteringKubernetes3rd/Motivation_230407_oo01/Motivation_230407_oo01#2-ビッグデータ系のミドルウェアの利用バッチ処理","content":"Spark などでデータ処理をしたくなったときに、簡単に使えるようにしたい。 これについては、必ずしも k8s を使わないといけないわけではない。すべての管理を k8s にしたいわけではない。 VxLAN などの仮想ネットワークを使うと、それなりに性能の劣化があるので本来は避けるべきかもしれない。 k8s を使えば物理計算機の節約になることが期待される。 nVIDIA の AI 解析基盤を、簡単に使えるようにしたい。  "},{"title":"3. スパコンの稼働統計の取得","type":1,"pageTitle":"Kubernetes を使ってやりたいこと","url":"k8s/MasteringKubernetes3rd/Motivation_230407_oo01/Motivation_230407_oo01#3-スパコンの稼働統計の取得","content":"スパコン全体のログ解析（ログの保管を含めて）を k8s の上で行いたい。 ログの保管を管理ネットワーク上で行っているが、安全な区画を物理計算基盤で構築しようとすると (1)まず、いちいちハードウェアを購入しなければならずお金と時間がかかる。 (2)本当に設定が安全であるかどうか判然としない。むしろ k8s 仮想基盤上にセキュリティー上重要なものを置いてしまったほうが安全なのではないか？ => Sysdig の導入（検証） (小言) 遺伝研スパコン上の問題を実データで表現し理解していないのであれば、明日から外の人が遺伝研スパコンを運用してもなんの問題もないことになる。知っていることが全く一緒だから。遺伝研スパコンは逼迫している => 稼働統計は予算要求のために最重要。稼働統計は売上に直結している。 ユーザ対応がもう一つの鍵。 "}]